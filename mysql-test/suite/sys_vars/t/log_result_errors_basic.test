######################## log_result_errors_basic.test #########################
#                                                                             #
# Variable Name: log_warnings                                                 #
# Scope: GLOBAL | SESSION                                                     #
# Access Type: Dynamic                                                        #
# Data Type: numeric                                                          #
# Default Value: 1-3                                                          #
# Range: -                                                                    #
#                                                                             #
#                                                                             #
# Description: Test Cases of Dynamic System Variable log_result_errors        #
#              that checks the behavior of this variable in the following ways#
#              * Default Value                                                #
#              * Valid & Invalid values                                       #
#              * Scope & Access method                                        #
#              * Data Integrity                                               #
#                                                                             #
###############################################################################

--source include/load_sysvars.inc

############################################################
#           START OF log_warnings TESTS                    #
############################################################


#############################################################
#                 Save initial value                        #
#############################################################

SET @start_global_value = @@global.log_result_errors;
SELECT @start_global_value;
SET @start_session_value = @@session.log_result_errors;
SELECT @start_session_value;


--echo '#--------------------FN_DYNVARS_067_01-------------------------#'
########################################################################
#     Display the DEFAULT value of log_result_errors            #
########################################################################

SET @@global.log_result_errors = 1;
SET @@global.log_result_errors = DEFAULT;
SELECT @@global.log_result_errors;

SET @@session.log_result_errors = 2;
SET @@session.log_result_errors = DEFAULT;
SELECT @@session.log_result_errors;


--echo '#--------------------FN_DYNVARS_067_02-------------------------#'
########################################################################
#     Check the DEFAULT value of log_result_errors              #
########################################################################

SET @@global.log_result_errors = DEFAULT;
SELECT @@global.log_result_errors = 0;

SET @@session.log_result_errors = DEFAULT;
SELECT @@session.log_result_errors = 0;


--echo '#--------------------FN_DYNVARS_067_03-------------------------#'
######################################################################
# Change the value of log_result_errors to a valid value for GLOBAL Scope #
######################################################################

SET @@global.log_result_errors = 0;
SELECT @@global.log_result_errors;
SET @@global.log_result_errors = 1;
SELECT @@global.log_result_errors;
SET @@global.log_result_errors = 3;
SELECT @@global.log_result_errors;


--echo '#--------------------FN_DYNVARS_067_04-------------------------#'
#######################################################################
# Change the value of log_result_errors to a valid value for SESSION Scope #
#######################################################################
 
SET @@session.log_result_errors = 0;
SELECT @@session.log_result_errors;
SET @@session.log_result_errors = 1;
SELECT @@session.log_result_errors;
SET @@session.log_result_errors = 3;
SELECT @@session.log_result_errors;


--echo '#------------------FN_DYNVARS_067_05-----------------------#'
########################################################
# Change the value of log_result_errors to an invalid value #
########################################################

SET @@global.log_result_errors = 4;
SELECT @@global.log_result_errors;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@global.log_result_errors = 65530.34;
SELECT @@global.log_result_errors;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@global.log_result_errors = test;
SELECT @@global.log_result_errors;

SET @@session.log_result_errors = -2;
SELECT @@session.log_result_errors;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@session.log_result_errors = 65530.34;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@session.log_result_errors = test;
SELECT @@session.log_result_errors;


--echo '#------------------FN_DYNVARS_067_06-----------------------#'
####################################################################
#   Check if the value in GLOBAL Table matches value in variable   #
####################################################################


SELECT @@global.log_result_errors = VARIABLE_VALUE 
FROM INFORMATION_SCHEMA.GLOBAL_VARIABLES 
WHERE VARIABLE_NAME='log_result_errors';

--echo '#------------------FN_DYNVARS_067_07-----------------------#'
####################################################################
#  Check if the value in SESSION Table matches value in variable   #
####################################################################

SELECT @@session.log_result_errors = VARIABLE_VALUE 
FROM INFORMATION_SCHEMA.SESSION_VARIABLES 
WHERE VARIABLE_NAME='log_result_errors';


--echo '#------------------FN_DYNVARS_067_08-----------------------#'
####################################################################
#     Check if TRUE and FALSE values can be used on variable       #
####################################################################

SET @@global.log_result_errors = TRUE;
SELECT @@global.log_result_errors;
SET @@global.log_result_errors = FALSE;
SELECT @@global.log_result_errors;


--echo '#---------------------FN_DYNVARS_067_09----------------------#'
#################################################################################
#  Check if accessing variable with and without GLOBAL point to same variable   #
#################################################################################

SET @@session.log_result_errors = 1;
SET @@global.log_result_errors = 2;
SELECT @@log_result_errors = @@global.log_result_errors;


--echo '#---------------------FN_DYNVARS_067_10----------------------#'
#############################################################################################
# Check if accessing variable with SESSION,LOCAL and without SCOPE points to same session   #
# variable                                                                                  #
#############################################################################################

SET @@session.log_result_errors = 1;
SET @@global.log_result_errors = 2;
SELECT @@log_result_errors = @@local.log_result_errors;
SELECT @@local.log_result_errors = @@session.log_result_errors;


##########################
# Generate some warnings #
##########################

SET @@session.log_result_errors = 1;
create table t1(a int primary key);
insert into t1 values(1);
--error ER_DUP_ENTRY
insert into t1 values(1);
insert ignore into t1 values(1);
SET @@session.log_result_errors = 3;
insert ignore into t1 values(1);
drop table t1;

####################################
#     Restore initial value        #
####################################

SET @@global.log_result_errors = @start_global_value;
SELECT @@global.log_result_errors;
SET @@session.log_result_errors = @start_session_value;
SELECT @@session.log_result_errors;

#######################################
# Check errors generared by this test #
#######################################

--let OUTF= `select @@log_error`

--perl
  use strict;
  my $outf= $ENV{'OUTF'} or die "OUTF not set";
  open(FILE, "$outf") or die("Unable to open $outf: $!\n");
  my @a= grep(/RESULT/g,<FILE>);
  foreach (@a)
  {
    s/[0123456789 -:]*(.*)/$1/;
    print $_;
  }
  close(FILE);
EOF

#############################################################
#                 END OF log_result_errors TESTS            #
#############################################################
